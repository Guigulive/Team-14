pragma solidity ^0.4.14;

contract Payroll {
    
    uint constant payDuration = 10 seconds;
    uint salary;
    address employee;
    uint lastPayday = now;
    mapping(address=>uint)balances;
    
    function addFund() payable returns (uint) {
        return this.balance;
    }
    
    function calculateRunway() returns (uint) {
        return this.balance / salary;
    }
    
    function hasEnoughFund() returns (bool) {
        return calculateRunway() > 0;
    }
    
    function updateworker(address e,uint s){
        employee = e;
        salary = s * 1 ether;
      }
    
    function getPaid() {
        
        uint nextPayday = lastPayday + payDuration;
        
        if(nextPayday > now){
            revert();
        }
        lastPayday = nextPayday;
        employee.transfer(salary);
    }
    
    function getBalance() returns(uint){
        return balances[msg.sender];
    }
   
    
    
}
